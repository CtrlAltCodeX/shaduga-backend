{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "API documentation for the login endpoint",
        "contact": {
            "email": "contact@example.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/chats": {
            "get": {
                "tags": [
                    "Chats"
                ],
                "summary": "Get all Chats",
                "description": "Display a listing of the Chats",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Chat"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Chats"
                ],
                "summary": "Create a new Chat",
                "description": "Store a newly created Chat in storage",
                "operationId": "store",
                "requestBody": {
                    "description": "Chat data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateChatRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Chat"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/chats/{id}": {
            "delete": {
                "tags": [
                    "Chats"
                ],
                "summary": "Remove the specified Chat",
                "description": "Remove the specified Chat from storage.",
                "operationId": "db160eb8bf1ca9551f6a4edaaf10a2de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Chat",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Chat deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Chat not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Chat not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/communities": {
            "get": {
                "tags": [
                    "Communities"
                ],
                "summary": "Get list of communities",
                "description": "Returns a list of communities",
                "operationId": "getCommunitiesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Community"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Communities"
                ],
                "summary": "Store a new community",
                "description": "Creates a new community",
                "operationId": "storeCommunity",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Community"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Community created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Community"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            }
        },
        "/api/communities/{id}": {
            "get": {
                "tags": [
                    "Communities"
                ],
                "summary": "Get a specific community",
                "description": "Returns the specified community",
                "operationId": "getCommunityById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the community",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Community"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/user/communities/{id}": {
            "get": {
                "tags": [
                    "Communities"
                ],
                "summary": "Get current communities for a user",
                "description": "Returns all communities for a specific user",
                "operationId": "getCurrentCommunities",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "logo": {
                                                "description": "Logo URL of the community",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "Name of the community",
                                                "type": "string"
                                            },
                                            "description": {
                                                "description": "Description of the community",
                                                "type": "string"
                                            },
                                            "is_blockchain": {
                                                "description": "Indicates if the community is blockchain-related",
                                                "type": "boolean"
                                            },
                                            "website": {
                                                "description": "Website URL of the community",
                                                "type": "string"
                                            },
                                            "categories": {
                                                "description": "Categories associated with the community",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "invites": {
                                                "description": "Number of invites available in the community",
                                                "type": "integer"
                                            },
                                            "link": {
                                                "description": "Link to the community",
                                                "type": "string"
                                            },
                                            "user_id": {
                                                "description": "ID of the user who owns the community",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/communities/{community_id}/members": {
            "get": {
                "tags": [
                    "Communities"
                ],
                "summary": "Get all members by community ID",
                "operationId": "80cdfe6bf95f1c10019fbce753499c75",
                "parameters": [
                    {
                        "name": "community_id",
                        "in": "path",
                        "description": "ID of the community",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommunityWithMembers"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Community not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/send/invitation": {
            "post": {
                "summary": "Send invitations",
                "description": "Sends invitations via email",
                "operationId": "06beb7f3859513f3aa95243dae2acfd9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "link": {
                                        "description": "The email address to send the invite to",
                                        "type": "string",
                                        "example": "example@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Invitation sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invitation Send"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/leader-boards/{id}": {
            "get": {
                "tags": [
                    "LeaderBoards"
                ],
                "summary": "Display the specified LeaderBoard",
                "operationId": "showLeaderBoard",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Community",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Leader Board retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "description": "LeaderBoard ID",
                                            "type": "integer"
                                        },
                                        "user_id": {
                                            "description": "user_id of the LeaderBoard",
                                            "type": "integer"
                                        },
                                        "score": {
                                            "description": "Score of the LeaderBoard",
                                            "type": "integer"
                                        },
                                        "rank": {
                                            "description": "rank of the LeaderBoard",
                                            "type": "string"
                                        },
                                        "level": {
                                            "description": "level of the LeaderBoard",
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Leader Board not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/members": {
            "post": {
                "tags": [
                    "Members"
                ],
                "summary": "Store a newly created Member",
                "description": "Stores a new member in the database.",
                "operationId": "storeMember",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMemberAPIRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Member"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Member saved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/members/{id}": {
            "delete": {
                "tags": [
                    "Members"
                ],
                "summary": "Delete a member",
                "description": "Remove the specified Member from storage.",
                "operationId": "6149d66e3554ff3511566c694c1eea60",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the member to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Member deleted successfully"
                    },
                    "404": {
                        "description": "Member not found"
                    }
                }
            }
        },
        "/api/modules": {
            "post": {
                "tags": [
                    "Modules"
                ],
                "summary": "Store a newly created Module in storage",
                "operationId": "03b26a43b2a56b63ac9113ac83339860",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "desc",
                                    "quest_id"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Title of the module",
                                        "type": "string"
                                    },
                                    "desc": {
                                        "description": "Description of the module",
                                        "type": "string"
                                    },
                                    "community_id": {
                                        "description": "community ID of the related community",
                                        "type": "integer"
                                    },
                                    "user_id": {
                                        "description": "user ID of the related community",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "title": {
                                                    "description": "Title of the module",
                                                    "type": "string"
                                                },
                                                "desc": {
                                                    "description": "Description of the module",
                                                    "type": "string"
                                                },
                                                "quest_id": {
                                                    "description": "ID of the related quest",
                                                    "type": "integer"
                                                },
                                                "user_id": {
                                                    "description": "user ID of the related community",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Module saved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/modules/{id}": {
            "get": {
                "tags": [
                    "Modules"
                ],
                "summary": "Display the specified Module",
                "description": "Get a module by its ID",
                "operationId": "getModuleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the community",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "properties": {
                                                "title": {
                                                    "type": "string"
                                                },
                                                "desc": {
                                                    "type": "string"
                                                },
                                                "community_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Module not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Modules"
                ],
                "summary": "Update the specified Module in storage",
                "operationId": "updateModule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of module to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateModuleAPIRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Module updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Module updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Module not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Module not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Modules"
                ],
                "summary": "Remove the specified Module from storage",
                "description": "Deletes a module based on the provided ID",
                "operationId": "destroyModule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the module to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Module deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Module deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Module not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Module not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while deleting the module"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/quests": {
            "get": {
                "tags": [
                    "Quests"
                ],
                "summary": "Display a listing of the Quests",
                "operationId": "getQuestsList",
                "responses": {
                    "200": {
                        "description": "Quests retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Quests"
                ],
                "summary": "Store a newly created Quest in storage",
                "operationId": "storeQuest",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "difficulty",
                                    "recurrence",
                                    "cooldown",
                                    "claim_time",
                                    "condition",
                                    "reward",
                                    "module",
                                    "sprint",
                                    "status"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Quest name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Quest description"
                                    },
                                    "difficulty": {
                                        "type": "string",
                                        "example": "easy"
                                    },
                                    "recurrence": {
                                        "type": "string",
                                        "example": "daily"
                                    },
                                    "cooldown": {
                                        "type": "integer",
                                        "example": 24
                                    },
                                    "claim_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-05-18T00:00:00Z"
                                    },
                                    "condition": {
                                        "type": "string",
                                        "example": "Complete 3 tasks"
                                    },
                                    "reward": {
                                        "type": "string",
                                        "example": "100 points"
                                    },
                                    "module": {
                                        "type": "string",
                                        "example": "Module A"
                                    },
                                    "sprint": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "image": {
                                        "type": "object",
                                        "example": ""
                                    },
                                    "module_id": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "additionals": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "link": {
                                                    "type": "string",
                                                    "example": "link"
                                                },
                                                "task_type": {
                                                    "type": "string",
                                                    "example": "link"
                                                },
                                                "number_invitation": {
                                                    "type": "string",
                                                    "example": 1
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "For API"
                                                },
                                                "endpoint": {
                                                    "type": "string",
                                                    "example": "For API"
                                                },
                                                "methods": {
                                                    "type": "string",
                                                    "example": "For API"
                                                },
                                                "api_key": {
                                                    "type": "string",
                                                    "example": "For API"
                                                },
                                                "partnership": {
                                                    "type": "string",
                                                    "example": "for partnership link"
                                                },
                                                "request_type": {
                                                    "type": "string",
                                                    "example": "text, url, number"
                                                },
                                                "correct_answer": {
                                                    "type": "string",
                                                    "example": "for answer"
                                                },
                                                "stars": {
                                                    "type": "string",
                                                    "example": "2"
                                                },
                                                "steps": {
                                                    "type": "string",
                                                    "example": "0 to 10"
                                                },
                                                "labels": {
                                                    "type": "string",
                                                    "example": "0 to 10"
                                                },
                                                "files": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    },
                                                    "example": [
                                                        "object",
                                                        "object",
                                                        "object"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Quest saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Quest name"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Quest description"
                                                },
                                                "difficulty": {
                                                    "type": "string",
                                                    "example": "easy"
                                                },
                                                "recurrence": {
                                                    "type": "string",
                                                    "example": "daily"
                                                },
                                                "cooldown": {
                                                    "type": "integer",
                                                    "example": 24
                                                },
                                                "claim_time": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-05-18T00:00:00Z"
                                                },
                                                "condition": {
                                                    "type": "string",
                                                    "example": "Complete 3 tasks"
                                                },
                                                "reward": {
                                                    "type": "string",
                                                    "example": "100 points"
                                                },
                                                "module": {
                                                    "type": "string",
                                                    "example": "Module A"
                                                },
                                                "sprint": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "status": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "image": {
                                                    "type": "object",
                                                    "example": ""
                                                },
                                                "module_id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "additionals": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "link": {
                                                                "type": "string",
                                                                "example": "link"
                                                            },
                                                            "task_type": {
                                                                "type": "string",
                                                                "example": "link"
                                                            },
                                                            "number_invitation": {
                                                                "type": "string",
                                                                "example": 1
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "For API"
                                                            },
                                                            "endpoint": {
                                                                "type": "string",
                                                                "example": "For API"
                                                            },
                                                            "methods": {
                                                                "type": "string",
                                                                "example": "For API"
                                                            },
                                                            "api_key": {
                                                                "type": "string",
                                                                "example": "For API"
                                                            },
                                                            "partnership": {
                                                                "type": "string",
                                                                "example": "for partnership link"
                                                            },
                                                            "request_type": {
                                                                "type": "string",
                                                                "example": "text, url, number"
                                                            },
                                                            "correct_answer": {
                                                                "type": "string",
                                                                "example": "for answer"
                                                            },
                                                            "stars": {
                                                                "type": "string",
                                                                "example": "2"
                                                            },
                                                            "steps": {
                                                                "type": "string",
                                                                "example": "0 to 10"
                                                            },
                                                            "labels": {
                                                                "type": "string",
                                                                "example": "0 to 10"
                                                            },
                                                            "files": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object"
                                                                },
                                                                "example": [
                                                                    "object",
                                                                    "object",
                                                                    "object"
                                                                ]
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quest saved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bad request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/quests/{module_id}": {
            "get": {
                "tags": [
                    "Quests"
                ],
                "summary": "Display the specified Quest",
                "description": "Retrieve a quest by its module_id.",
                "operationId": "getQuestBymodule_id",
                "parameters": [
                    {
                        "name": "module_id",
                        "in": "path",
                        "description": "The module_id of the quest",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quest retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Quest name"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Quest description"
                                                },
                                                "difficulty": {
                                                    "type": "string",
                                                    "example": "easy"
                                                },
                                                "recurrence": {
                                                    "type": "string",
                                                    "example": "daily"
                                                },
                                                "cooldown": {
                                                    "type": "integer",
                                                    "example": 24
                                                },
                                                "claim_time": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-05-18T00:00:00Z"
                                                },
                                                "condition": {
                                                    "type": "string",
                                                    "example": "Complete 3 tasks"
                                                },
                                                "reward": {
                                                    "type": "string",
                                                    "example": "100 points"
                                                },
                                                "module": {
                                                    "type": "string",
                                                    "example": "Module A"
                                                },
                                                "sprint": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "status": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "image": {
                                                    "type": "object",
                                                    "example": "{}"
                                                },
                                                "module_id": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "additionals": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "link": {
                                                                "type": "string",
                                                                "example": "link"
                                                            },
                                                            "task_type": {
                                                                "type": "string",
                                                                "example": "link"
                                                            },
                                                            "number_invitation": {
                                                                "type": "string",
                                                                "example": 1
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "For API"
                                                            },
                                                            "endpoint": {
                                                                "type": "string",
                                                                "example": "For API"
                                                            },
                                                            "methods": {
                                                                "type": "string",
                                                                "example": "For API"
                                                            },
                                                            "api_key": {
                                                                "type": "string",
                                                                "example": "For API"
                                                            },
                                                            "partnership": {
                                                                "type": "string",
                                                                "example": "for partnership link"
                                                            },
                                                            "request_type": {
                                                                "type": "string",
                                                                "example": "text, url, number"
                                                            },
                                                            "correct_answer": {
                                                                "type": "string",
                                                                "example": "for answer"
                                                            },
                                                            "stars": {
                                                                "type": "string",
                                                                "example": "2"
                                                            },
                                                            "steps": {
                                                                "type": "string",
                                                                "example": "0 to 10"
                                                            },
                                                            "labels": {
                                                                "type": "string",
                                                                "example": "0 to 10"
                                                            },
                                                            "files": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object"
                                                                },
                                                                "example": [
                                                                    "object",
                                                                    "object",
                                                                    "object"
                                                                ]
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quest saved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quest not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quest not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/quests/{id}": {
            "put": {
                "tags": [
                    "Quests"
                ],
                "summary": "Update an existing quest",
                "description": "Updates the specified quest by ID",
                "operationId": "updateQuest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the quest to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Quest name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Quest description"
                                    },
                                    "difficulty": {
                                        "type": "string",
                                        "example": "easy"
                                    },
                                    "recurrence": {
                                        "type": "string",
                                        "example": "daily"
                                    },
                                    "cooldown": {
                                        "type": "integer",
                                        "example": 24
                                    },
                                    "claim_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-05-18T00:00:00Z"
                                    },
                                    "condition": {
                                        "type": "string",
                                        "example": "Complete 3 tasks"
                                    },
                                    "reward": {
                                        "type": "string",
                                        "example": "100 points"
                                    },
                                    "module": {
                                        "type": "string",
                                        "example": "Module A"
                                    },
                                    "sprint": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "module_id": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "additionals": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "link": {
                                                    "type": "string",
                                                    "example": "link"
                                                },
                                                "task_type": {
                                                    "type": "string",
                                                    "example": "link"
                                                },
                                                "number_invitation": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "For API"
                                                },
                                                "endpoint": {
                                                    "type": "string",
                                                    "example": "For API"
                                                },
                                                "methods": {
                                                    "type": "string",
                                                    "example": "For API"
                                                },
                                                "api_key": {
                                                    "type": "string",
                                                    "example": "For API"
                                                },
                                                "partnership": {
                                                    "type": "string",
                                                    "example": "for partnership link"
                                                },
                                                "request_type": {
                                                    "type": "string",
                                                    "example": "text, url, number"
                                                },
                                                "correct_answer": {
                                                    "type": "string",
                                                    "example": "for answer"
                                                },
                                                "stars": {
                                                    "type": "string",
                                                    "example": "2"
                                                },
                                                "steps": {
                                                    "type": "string",
                                                    "example": "0 to 10"
                                                },
                                                "labels": {
                                                    "type": "string",
                                                    "example": "0 to 10"
                                                },
                                                "files": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "format": "binary"
                                                    },
                                                    "example": [
                                                        "object",
                                                        "object",
                                                        "object"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Quest updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Quest name"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Quest description"
                                                },
                                                "difficulty": {
                                                    "type": "string",
                                                    "example": "easy"
                                                },
                                                "recurrence": {
                                                    "type": "string",
                                                    "example": "daily"
                                                },
                                                "cooldown": {
                                                    "type": "integer",
                                                    "example": 24
                                                },
                                                "claim_time": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-05-18T00:00:00Z"
                                                },
                                                "condition": {
                                                    "type": "string",
                                                    "example": "Complete 3 tasks"
                                                },
                                                "reward": {
                                                    "type": "string",
                                                    "example": "100 points"
                                                },
                                                "module": {
                                                    "type": "string",
                                                    "example": "Module A"
                                                },
                                                "sprint": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "status": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "image": {
                                                    "type": "string",
                                                    "format": "binary"
                                                },
                                                "module_id": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "additionals": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "link": {
                                                                "type": "string",
                                                                "example": "link"
                                                            },
                                                            "task_type": {
                                                                "type": "string",
                                                                "example": "link"
                                                            },
                                                            "number_invitation": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "For API"
                                                            },
                                                            "endpoint": {
                                                                "type": "string",
                                                                "example": "For API"
                                                            },
                                                            "methods": {
                                                                "type": "string",
                                                                "example": "For API"
                                                            },
                                                            "api_key": {
                                                                "type": "string",
                                                                "example": "For API"
                                                            },
                                                            "partnership": {
                                                                "type": "string",
                                                                "example": "for partnership link"
                                                            },
                                                            "request_type": {
                                                                "type": "string",
                                                                "example": "text, url, number"
                                                            },
                                                            "correct_answer": {
                                                                "type": "string",
                                                                "example": "for answer"
                                                            },
                                                            "stars": {
                                                                "type": "string",
                                                                "example": "2"
                                                            },
                                                            "steps": {
                                                                "type": "string",
                                                                "example": "0 to 10"
                                                            },
                                                            "labels": {
                                                                "type": "string",
                                                                "example": "0 to 10"
                                                            },
                                                            "files": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "format": "binary"
                                                                },
                                                                "example": [
                                                                    "object",
                                                                    "object",
                                                                    "object"
                                                                ]
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quest updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quest not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quest not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Quests"
                ],
                "summary": "Remove the specified Quests from storage",
                "description": "Deletes a quests by its ID",
                "operationId": "destroyQuests",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the quests to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quests deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quests deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quests not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quests not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reviews": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Store a new review",
                "description": "Create and store a new review in the system.",
                "operationId": "a5464577f1504717fe4f830d1d640ef5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "community_id",
                                    "star_rating",
                                    "body",
                                    "status",
                                    "bookmarked"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "community_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "star_rating": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "body": {
                                        "type": "string",
                                        "example": "This is a review body."
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "approved"
                                    },
                                    "bookmarked": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Review saved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "community_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "star_rating": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "body": {
                                                    "type": "string",
                                                    "example": "This is a review body."
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "approved"
                                                },
                                                "bookmarked": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reviews/{userId}/{communityId}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get a review by user and community",
                "description": "Retrieve a review based on user ID and community ID",
                "operationId": "getReviewByUserCommunity",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "communityId",
                        "in": "path",
                        "description": "ID of the community",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "community_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/subscriptions": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Display a listing of the Subscriptions",
                "operationId": "d0f1b367da9e9395814bc66331ce88a1",
                "responses": {
                    "200": {
                        "description": "Successful retrieval of subscriptions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Subscription"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Store a newly created Subscription in storage",
                "operationId": "286ca8bfa118011978c613004009c3f9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSubscriptionAPIRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subscription saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subscription"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            }
        },
        "/api/tasks": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Store a newly created Task in storage",
                "operationId": "storeTask",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "assigned_to",
                                    "priority",
                                    "status",
                                    "start_date",
                                    "due_date"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Design new logo"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Create a new logo for the website"
                                    },
                                    "assigned_to": {
                                        "type": "integer",
                                        "example": "2"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "start": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-06-01"
                                    },
                                    "end": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-06-01"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "last_updated_by": {
                                        "type": "string",
                                        "example": "John Doe"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Task"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task saved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a specific user",
                "description": "Returns the specified user",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a specific user",
                "description": "Deletes the specified user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a specific user",
                "description": "Updates the specified user",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "da913b2d804652f35c0a2c2f83015983",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "community_id": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "user@example.com"
                                                        },
                                                        "community_id": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "integer"
                                                            },
                                                            "example": [
                                                                1,
                                                                2,
                                                                3
                                                            ]
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "6d196eb99f855a1b46f47f5ed8ba40ce",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "JWT token"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "user@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User login successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid email or password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/send/otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send OTP",
                "description": "Send OTP to the user's email address.",
                "operationId": "b305e03fbf3effe967863fc7433dbcf7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify/otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP",
                "description": "Verify the OTP provided by the user.",
                "operationId": "ecfa42993f24c9454400533dfd2ad48c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "otp"
                                ],
                                "properties": {
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "admin@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP successfully verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP successfully matched"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/current/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get Current User",
                "description": "Returns the current authenticated user",
                "operationId": "f07fa19bf75337cdf6a270d6eeeb05c9",
                "responses": {
                    "200": {
                        "description": "Current User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "johndoe@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Current User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Please Login!!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Please Login!!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the authenticated user",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Successfully Logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully Logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/forget-password": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Send OTP to email for password reset",
                "operationId": "54fdb4f58f53c4fb6653c1cb80ed0ed8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Reset password using OTP",
                "operationId": "717f2ce41afc56409f4434e0ba098298",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "otp": {
                                        "type": "string",
                                        "example": "1234"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password successfully changed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password successfully changed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Subscription": {
                "description": "Subscription model",
                "required": [
                    "id",
                    "name",
                    "status"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the subscription",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the subscription",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the subscription",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CreateSubscriptionAPIRequest": {
                "description": "Create subscription request",
                "required": [
                    "name",
                    "status"
                ],
                "properties": {
                    "user_id": {
                        "description": "user_id of the subscription",
                        "type": "string"
                    },
                    "plan_id": {
                        "description": "plan_id of the subscription",
                        "type": "string"
                    },
                    "start_date": {
                        "description": "start_date of the subscription",
                        "type": "string",
                        "format": "date"
                    },
                    "end_date": {
                        "description": "end_date of the subscription",
                        "type": "string",
                        "format": "date"
                    },
                    "status": {
                        "description": "Status of the subscription",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Chat": {
                "title": "Chat",
                "description": "Chat message schema",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the chat message",
                        "type": "integer",
                        "format": "int64"
                    },
                    "message": {
                        "description": "Content of the chat message",
                        "type": "string"
                    },
                    "sender_id": {
                        "description": "Identifier of the user who sent the message",
                        "type": "integer",
                        "format": "int64"
                    },
                    "receiver_id": {
                        "description": "Identifier of the user or group who received the message",
                        "type": "integer",
                        "format": "int64"
                    },
                    "timestamp": {
                        "description": "Timestamp indicating when the message was sent",
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "description": "Status of the message (e.g., sent, delivered, read)",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of message (e.g., text, image, video)",
                        "type": "string"
                    },
                    "conversation_id": {
                        "description": "Identifier of the conversation thread or chat session",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "CreateChatRequest": {
                "title": "Create Chat Request",
                "description": "Request body schema for creating a new Chat",
                "required": [
                    "message",
                    "sender_id",
                    "receiver_id"
                ],
                "properties": {
                    "message": {
                        "description": "Content of the chat message",
                        "type": "string"
                    },
                    "sender_id": {
                        "description": "Identifier of the user who sent the message",
                        "type": "integer",
                        "format": "int64"
                    },
                    "receiver_id": {
                        "description": "Identifier of the user or group who received the message",
                        "type": "integer",
                        "format": "int64"
                    },
                    "attachment": {
                        "description": "Attachment data or reference (optional)",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of message (e.g., text, image, video) (optional)",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Community": {
                "title": "Community",
                "description": "Community model",
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the community",
                        "type": "string"
                    },
                    "logo": {
                        "description": "Logo of the community",
                        "type": "object"
                    },
                    "description": {
                        "description": "description of the community",
                        "type": "string"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "categories",
                            "categories",
                            "categories"
                        ]
                    },
                    "is_blockchain": {
                        "description": "is_blockchain of the community",
                        "type": "integer"
                    },
                    "website": {
                        "description": "website of the community",
                        "type": "string"
                    },
                    "link": {
                        "description": "link of the community",
                        "type": "string"
                    },
                    "invitation": {
                        "description": "Invitation of the community",
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "example": [
                            [
                                "admin@example.com",
                                "Role"
                            ],
                            [
                                "user@example.com",
                                "Role"
                            ]
                        ]
                    }
                },
                "type": "object"
            },
            "CommunityWithMembers": {
                "properties": {
                    "id": {
                        "description": "Community ID",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Community name",
                        "type": "string"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Member"
                        }
                    }
                },
                "type": "object"
            },
            "CreateMemberAPIRequest": {
                "required": [
                    "name",
                    "email"
                ],
                "properties": {
                    "community_id": {
                        "description": "ID of the member",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "user_id of the member",
                        "type": "integer"
                    },
                    "join_date": {
                        "description": "join_date of the member",
                        "type": "string",
                        "format": "date"
                    },
                    "status": {
                        "description": "Creation timestamp",
                        "type": "integer"
                    },
                    "role": {
                        "description": "role timestamp",
                        "type": "string"
                    },
                    "last_active": {
                        "description": "last_active timestamp",
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "Member": {
                "properties": {
                    "community_id": {
                        "description": "ID of the member",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "user_id of the member",
                        "type": "integer"
                    },
                    "join_date": {
                        "description": "join_date of the member",
                        "type": "string",
                        "format": "date"
                    },
                    "status": {
                        "description": "Creation timestamp",
                        "type": "integer"
                    },
                    "role": {
                        "description": "role timestamp",
                        "type": "string"
                    },
                    "last_active": {
                        "description": "last_active timestamp",
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "UpdateModuleAPIRequest": {
                "required": [
                    "name",
                    "description"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the module",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the module",
                        "type": "string"
                    },
                    "community_id": {
                        "description": "Commnity Id",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "User Id",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Task": {
                "description": "Task Model",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Design new logo"
                    },
                    "description": {
                        "type": "string",
                        "example": "Create a new logo for the website"
                    },
                    "assigned_to": {
                        "type": "integer",
                        "example": "2"
                    },
                    "status": {
                        "type": "integer",
                        "example": 1
                    },
                    "start": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-06-01"
                    },
                    "end": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-06-01"
                    },
                    "category_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "last_updated_by": {
                        "type": "string",
                        "example": "John Doe"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the user",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserRequest": {
                "title": "User Request",
                "description": "User request data",
                "properties": {
                    "name": {
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email"
                    }
                },
                "type": "object"
            }
        }
    }
}